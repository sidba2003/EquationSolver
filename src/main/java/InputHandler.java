import javax.json.Json;
import javax.json.JsonObject;
import javax.json.JsonReader;
import javax.json.JsonArrayBuilder;

import java.io.StringReader;


public class InputHandler {

    /**
     * Entry method to the InputGenerator Class
     * Returns the JsonObject which can then be passed on as an
     * argument to the InputSolver class
     */
    public static JsonObject generateInput(String question){
        return generateObject(strip2LevelOne(question));
    }

    /**
     * takes a string as an argument
     * converts the String to a JsonObject and returns it
     */
    private static JsonObject generateObject(String question){
        JsonReader reader = Json.createReader(new StringReader(question));
        JsonObject jsonObject = reader.readObject();
        reader.close();

        return jsonObject;
    }


    /**
     * this method is entry point to stripping a question to the desired (Level 1) format
     * this method takes a string as an argument and returns a string
     */
    private static String strip2LevelOne(String input) {

        /**
         * in order to generate the argument to be passed on to the getTermsJsonArray method...
         * a series of string splitting is used to obtain the value of 'y' in terms of 'x'
         */
        String[] parts = input.split(":");
        String[] values = parts[1].split(";");
        String[] xVals = values[0].split("=");
        String[] yVals = values[1].split("=");


        /** the final argument to be sent on to getTermsJsonArray is stored in the variable 'val2send' */
        String val2send = yVals[1].trim();

        JsonObject result = Json.createObjectBuilder()
                .add("xValue", Integer.parseInt(xVals[1].trim()))
                .add("terms", getTermsJsonArray(val2send))
                .build();

        return result.toString().replace("\\", "");
    }


    /**
     * this method takes the value of 'y' in terms of 'x' which is not in the desired format
     * it returns a variable of type JsonArrayBuilder to the strip2One method
     */
    private static JsonArrayBuilder getTermsJsonArray(String input) {

        /**
         * the 'termStrings' array is used to store the individual terms of the polynomial equation
         * this array is created by calling another method 'termSplit' which returns an array containing the terms
         */
        String[] termStrings = termSplit(input);


        /**
         * this is the array to store the terms after they have been converted to JsonObjects from termStrings
         */
        JsonObject[] terms = new JsonObject[termStrings.length];


        /** the index variable is used as an index indication of the array terms */
        int index = 0;


        /**
         * The following loop is used to parse through each element of the array termStrings
         * a new json object is generated by carrying out splitting operations on the element
         */
        for (String termString : termStrings) {

            /** we split each term on '.x^', this seperates the multiplier and the power */
            String[] parts = termString.split("\\.x\\^");

            /**
             * if the first character of the first part of split term is '+', action becomes 'add'
             * else the action becomes 'subtract'
             */
            String action = (parts[0].startsWith("+")) ? "add" : "subtract";

            /**
             * we obtain the coefficient by parsing the first part of the split term and converting it to int
             * we skip the first character as that is a sign and denotes the action
             */
            int coefficient = Integer.parseInt(parts[0].substring(1, parts[0].length()));

            /** the second part of the split term acts as the power */
            int power = Integer.parseInt(parts[1]);

            JsonObject term = Json.createObjectBuilder()
                    .add("power", power)
                    .add("multiplier", coefficient)
                    .add("action", action)
                    .build();

            terms[index] = term;
            index++;
        }

        /**
         * the following loop is used to create a variable of type jSon Arraybuilder which is then returned
         * this is because the add() method of jsonobject cant take json objects and json array as its argument
         */

        JsonArrayBuilder arrayBuilder = Json.createArrayBuilder();

        for (JsonObject term : terms) {
            arrayBuilder.add(term);
        }

        return arrayBuilder;
    }


    /**
     * this method is used to split the terms into an array
     * This is achieved by creating a new string with '/' before every '+' or a '-'
     * the string is then split on '/' and returned
     */
    private static String[] termSplit(String s){
        /**
         * we declare a variable of type StringBuilder because we need a variable to hold mutable strings
         */
        StringBuilder sb = new StringBuilder();

        for (int c = 0; c < s.length(); c++) {
            /**
             * we add the sign encountered in the first iteration to the new string and continue to the next iteration
             */
            if (c == 0){
                sb.append(s.charAt(c));
                continue;
            }

            /**
             * if we encounter a '+' or a '-' we first add a '/' to the new string and then add the sign
             */
            if (s.charAt(c) == ('+') || s.charAt(c) == '-') {
                sb.append('/');
            }
            sb.append(s.charAt(c));
        }

        /**
         * in the end we have a new string with a '/' before every sign
         * we convert this to an immutable string which is then split into an array
         * each element of the array is created by separating the string on '/'
         * this array is then returned
         */
        String newString = sb.toString();
        String[] termsArray = newString.split("/");

        return termsArray;
    }
}