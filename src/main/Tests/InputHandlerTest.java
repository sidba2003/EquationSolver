import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

import javax.json.JsonObject;
import javax.json.Json;
import javax.json.JsonArrayBuilder;
import javax.json.JsonObjectBuilder;

class InputHandlerTest {

    @Test
    void handleInput1() {
        /**manually creating the expected json value to be passed on to assertEquals method*/
        JsonObjectBuilder builder = Json.createObjectBuilder();
        builder.add("xValue", 2);
        JsonArrayBuilder termsArrayBuilder = Json.createArrayBuilder();
        JsonObjectBuilder termObjectBuilder = Json.createObjectBuilder();
        termObjectBuilder.add("power", 2);
        termObjectBuilder.add("multiplier", 2);
        termObjectBuilder.add("action", "add");
        termsArrayBuilder.add(termObjectBuilder);
        builder.add("terms", termsArrayBuilder);
        JsonObject jsonObject = builder.build();

        /** this test tests a basic equation generated by the InputGenerator class */
        assertEquals(InputHandler.generateInput("numeric:x = 2; y = +2.x^2"), jsonObject);
    }



    @Test
    void handleInput2(){
        /**manually creating the expected json value to be passed on to assertEquals method*/
        JsonObjectBuilder builder = Json.createObjectBuilder();
        builder.add("xValue", 2);
        JsonArrayBuilder termsArrayBuilder = Json.createArrayBuilder();
        JsonObjectBuilder termObjectBuilder1 = Json.createObjectBuilder();
        termObjectBuilder1.add("power", 2);
        termObjectBuilder1.add("multiplier", 2);
        termObjectBuilder1.add("action", "add");
        termsArrayBuilder.add(termObjectBuilder1);
        JsonObjectBuilder termObjectBuilder2 = Json.createObjectBuilder();
        termObjectBuilder2.add("power", 2);
        termObjectBuilder2.add("multiplier", 2);
        termObjectBuilder2.add("action", "subtract");
        termsArrayBuilder.add(termObjectBuilder2);
        builder.add("terms", termsArrayBuilder);
        JsonObject jsonObject = builder.build();


        /** this test includes both the '+' and '-' operators */
        assertEquals(InputHandler.generateInput("numeric:x = 2; y = +2.x^2-2.x^2"), jsonObject);
    }
}